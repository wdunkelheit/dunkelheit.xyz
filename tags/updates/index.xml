<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Updates on Dunkelheit</title>
    <link>https://dunkelheit.xyz/tags/updates/</link>
    <description>Recent content in Updates on Dunkelheit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 22 Feb 2023 22:00:00 +0000</lastBuildDate><atom:link href="https://dunkelheit.xyz/tags/updates/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cookbook Now Live</title>
      <link>https://dunkelheit.xyz/blog/cookbook-now-live/</link>
      <pubDate>Wed, 22 Feb 2023 22:00:00 +0000</pubDate>
      
      <guid>https://dunkelheit.xyz/blog/cookbook-now-live/</guid>
      <description>&lt;p&gt;The cookbook is now live. You can find it &lt;a href=&#34;https://dunkelheit.xyz/recipes/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It has a separate RSS feed from the one for blog posts. You may need to adjust your existing RSS link as I made some changes to that on the back end. You can find the most up to date versions of the RSS links at the bottom of this page and on the cookbook page.&lt;/p&gt;
&lt;p&gt;The cookbook is a bit barren right now but I figured it was better have it public than not at this time.&lt;/p&gt;
&lt;p&gt;Happy cooking!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Domain Name Change Update</title>
      <link>https://dunkelheit.xyz/blog/domain-name-change-update/</link>
      <pubDate>Sat, 07 Jan 2023 18:30:00 +0100</pubDate>
      
      <guid>https://dunkelheit.xyz/blog/domain-name-change-update/</guid>
      <description>&lt;p&gt;I have decided against the use of the &lt;code&gt;city&lt;/code&gt; TLD for the site and will be returning to tradition and using the &lt;code&gt;xyz&lt;/code&gt; TLD.&lt;/p&gt;
&lt;p&gt;My reasoning for choosing the &lt;code&gt;xyz&lt;/code&gt; TLD over &lt;code&gt;city&lt;/code&gt; is twofold. The &lt;code&gt;xyz&lt;/code&gt; TLD more accurately represents the end of the internet theme and it is much cheaper which fits with the minimalist theme.&lt;/p&gt;
&lt;p&gt;The update will occur at some point in the coming days. The current domain will continue to work until it expires.&lt;/p&gt;
&lt;p&gt;RSS feeds should continue to work on the old domain once the domain change occurs. Once the old domain expires however it will no longer update. Please update your RSS feeds to reflect the new domain. The new feed can be found &lt;a href=&#34;https://dunkelheit.xyz/index.xml&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Email will change to the new domain at some point in the future too. I will make sure to update the site when this occurs. For now assume that the &lt;code&gt;w@dunkelheit.biz&lt;/code&gt; address is no longer functional.&lt;/p&gt;
&lt;p&gt;Please update your RSS, email contacts, etc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Switching to Markdown Format</title>
      <link>https://dunkelheit.xyz/blog/switching-to-markdown-format/</link>
      <pubDate>Fri, 16 Jul 2021 07:00:00 +0000</pubDate>
      
      <guid>https://dunkelheit.xyz/blog/switching-to-markdown-format/</guid>
      <description>&lt;p&gt;I am starting to get comfortable with &lt;code&gt;hugo&lt;/code&gt; as a static site generator, I know I haven&amp;rsquo;t made my theme the &amp;ldquo;correct way&amp;rdquo; but for now it works to an acceptable minimum and most importantly the pages it produces are formatted perfectly.&lt;/p&gt;
&lt;p&gt;I had an issue in that I couldn&amp;rsquo;t decide if I wanted to use Markdown or HTML when writing blog posts. The issue may seem silly (it is) but my reasons for having it were pretty straight forward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Autism&lt;/li&gt;
&lt;li&gt;Markdown:
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Just Works&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Easy to read and write (important for blogging)&lt;/li&gt;
&lt;li&gt;Hugo&amp;rsquo;s intended language (kinda)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTML:
&lt;ul&gt;
&lt;li&gt;Gives me total control via element ids and tags&lt;/li&gt;
&lt;li&gt;Non-Markdown page elements&lt;/li&gt;
&lt;li&gt;Allows for very specific inputs into the page.&lt;/li&gt;
&lt;li&gt;Accurate and very flexible control of media inputs (important)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course &lt;code&gt;hugo&lt;/code&gt; (currently) supports the use of both at the same time but with some minor issues. Ideally I would prefer to use one standard for blog posts and stick with it. For the sake of uniformity and simplicity.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what I was previously doing when drafting a post:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write it in Markdown for ease of writing and proofreading&lt;/li&gt;
&lt;li&gt;Start &lt;code&gt;hugo server -D&lt;/code&gt; so that I can preview the page&lt;/li&gt;
&lt;li&gt;Convert everything to HTML in the document&lt;/li&gt;
&lt;li&gt;Check preview again&lt;/li&gt;
&lt;li&gt;If it&amp;rsquo;s all good then publish.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now the issue here should be obvious, I was effectively putting in twice the work for the same result. But this did mean that I had absolute control of the page contents and could ensure certain elements are displayed correctly if I wanted them to have a unique style or position that Markdown itself wouldn&amp;rsquo;t produce.&lt;/p&gt;
&lt;p&gt;I also realised after the &lt;a href=&#34;learning-german&#34;&gt;Learning German&lt;/a&gt; entry that I could just take the HTML output from the &lt;code&gt;hugo&lt;/code&gt; output. Oops.&lt;/p&gt;
&lt;p&gt;My goal was to eliminate steps 3 and 4 above. The easiest way to do this is to just eliminate HTML conversion of the entire document and use &lt;code&gt;HTML&lt;/code&gt; when needed instead.&lt;/p&gt;
&lt;p&gt;This eliminates steps 3 and 4 as well as allowing me to control elements very specifically when needed and keeps the document readable.&lt;/p&gt;
&lt;p&gt;So going forward all posts will be created this way unless it isn&amp;rsquo;t viable for the post type. All previous posts will be converted too. Top level pages AKA &amp;ldquo;base&amp;rdquo; pages will still be written in HTML for functional reasons.&lt;/p&gt;
&lt;p&gt;Additionally the site will now be rendered using the &lt;code&gt;uglyURLs = true&lt;/code&gt; option as I don&amp;rsquo;t like the look of &lt;code&gt;/blog/post-name/index.html&lt;/code&gt; in the file tree.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
